{"version":3,"sources":["components/Navbar/Navbar.js","components/Bars/Bars.js","components/Footer/Footer.js","algorithms/BubbleSort.js","algorithms/SelectionSort.js","algorithms/InsertionSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","App.js","index.js","components/Navbar/Navbar.module.css","components/Footer/Footer.module.css","components/Bars/Bars.module.css"],"names":["Navbar","getRandomArray","handleChange","handleSort","isSorting","isCompleted","arraySize","speed","algorithm","className","classes","nav","href","link","items","inputGroup","group","name","type","min","max","onChange","value","disabled","bubble","step","select","custom","buttonGroup","onClick","Bars","blocks","compare","sorted","swap","bars","map","block","i","height","length","bg","includes","style","backgroundColor","Footer","footer","inner","icon","faGithub","bubbleSort","j","blocksCopy","slice","order","push","selectionSort","insertionSort","helper","left","right","mid","Math","floor","arr","merge","mergeSort","pivot","partition","quickSort","randomArray","Array","from","e","random","App","useState","setAlgorithm","setArraySize","setBlocks","setIsSorting","setIsCompleted","setSpeed","setCompare","setSwap","sortedIndex","setSortedIndex","useEffect","Fragment","target","Number","showSteps","loop","setTimeout","k","index","previousState","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ea0a938e.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Navbar.module.css';\n\nconst Navbar = ({ getRandomArray, handleChange, handleSort, isSorting, isCompleted, arraySize, speed, algorithm }) => {\n  return (\n    <nav className={classes.nav}>\n      <a href='https://kaquino1.github.io/sorting-visualizer' className={classes.link}>\n        Sorting Algorithm Visualizer\n      </a>\n\n      <div className={classes.items}>\n        <div className={classes.inputGroup}>\n          <div className={classes.group}>\n            <label>Speed</label>\n            <input\n              name='speed'\n              type='range'\n              min='1'\n              max='15'\n              onChange={handleChange}\n              value={15 - (speed - 100) / 100}\n              disabled={isSorting}\n            />\n\n            <output className={`${classes.bubble} ${isSorting ? classes.disabled : ''}`}>\n              {15 - (speed - 100) / 100}\n            </output>\n          </div>\n\n          <div className={classes.group}>\n            <label>Array Size</label>\n            <input\n              name='arraySize'\n              type='range'\n              min='5'\n              max='100'\n              step='5'\n              onChange={handleChange}\n              value={arraySize}\n              disabled={isSorting}\n            />\n\n            <output className={`${classes.bubble} ${isSorting ? classes.disabled : ''}`}>{arraySize}</output>\n          </div>\n\n          <div className={classes.group}>\n            <label>Algorithm</label>\n            <div className={`${classes.select} ${isSorting ? classes.disabled : ''}`}>\n              <select\n                name='algorithm'\n                onChange={handleChange}\n                value={algorithm}\n                disabled={isSorting}\n                className={classes.custom}\n              >\n                <option value='bubbleSort'>Bubble Sort</option>\n                <option value='selectionSort'>Selection Sort</option>\n                <option value='insertionSort'>Insertion Sort</option>\n                <option value='mergeSort'>Merge Sort</option>\n                <option value='quickSort'>Quick Sort</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className={classes.buttonGroup}>\n          <button onClick={getRandomArray} disabled={isSorting}>\n            Randomize\n          </button>\n          <button onClick={handleSort} disabled={isSorting || isCompleted}>\n            Sort\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nimport classes from './Bars.module.css';\n\nconst Bars = ({ blocks, compare, sorted, swap }) => {\n  return (\n    <div className={classes.bars}>\n      {blocks.map((block, i) => {\n        const height = (block * 500) / blocks.length;\n        let bg = '#333';\n\n        // YELLOW\n        if (compare && (i === compare[0] || i === compare[1])) {\n          bg = '#FFEF00';\n        }\n\n        // RED\n        if (swap && (i === swap[0] || i === swap[1])) {\n          bg = '#CB4154';\n        }\n        // GREEN\n        if (sorted && sorted.includes(i)) {\n          bg = '#3EB489';\n        }\n\n        const style = {\n          backgroundColor: bg,\n          height: height\n        };\n        return <div key={i} className={classes.block} style={style}></div>;\n      })}\n    </div>\n  );\n};\n\nexport default Bars;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport classes from './Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <div className={classes.footer}>\n      <a className={classes.link} href='https://github.com/kaquino1/sorting-visualizer'>\n        <div className={classes.inner}>\n          <FontAwesomeIcon icon={faGithub} />\n          <span>GitHub</span>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","const bubbleSort = blocks => {\n  const blocksCopy = blocks.slice();\n  const order = [];\n\n  let i, j;\n  for (i = 0; i < blocksCopy.length; i++) {\n    for (j = 0; j < blocksCopy.length - i - 1; j++) {\n      // RECORD J & J+1 AS BEING COMPARED\n      order.push([j, j + 1, null, null]);\n\n      if (blocksCopy[j] > blocksCopy[j + 1]) {\n        [blocksCopy[j], blocksCopy[j + 1]] = [blocksCopy[j + 1], blocksCopy[j]];\n\n        // J & J+1 WERE SWAPPED, RECORD UPDATED ARRAY\n        order.push([j, j + 1, blocksCopy.slice(), null]);\n      }\n    }\n    // RECORD J AS BEING SORTED\n    order.push([null, null, null, j]);\n  }\n\n  return order;\n};\n\nexport default bubbleSort;\n","const selectionSort = blocks => {\n  const blocksCopy = blocks.slice();\n  const order = [];\n\n  let i, j;\n  for (i = 0; i < blocksCopy.length; i++) {\n    for (j = i + 1; j < blocksCopy.length; j++) {\n      // RECORD i & J AS BEING COMPARED\n      order.push([i, j, null, null]);\n\n      if (blocksCopy[i] > blocksCopy[j]) {\n        [blocksCopy[i], blocksCopy[j]] = [blocksCopy[j], blocksCopy[i]];\n\n        // I & J WERE SWAPPED, RECORD UPDATED ARRAY\n        order.push([i, j, blocksCopy.slice(), null]);\n      }\n    }\n    // RECORD I AS BEING SORTED\n    order.push([null, null, null, i]);\n  }\n  return order;\n};\n\nexport default selectionSort;\n","const insertionSort = blocks => {\n  const blocksCopy = blocks.slice();\n  const order = [];\n\n  let i, j;\n\n  for (i = 0; i < blocksCopy.length; i++) {\n    j = i - 1;\n    while (j >= 0 && blocksCopy[j] > blocksCopy[j + 1]) {\n      [blocksCopy[j], blocksCopy[j + 1]] = [blocksCopy[j + 1], blocksCopy[j]];\n      // RECORD J & J+1 AS BEING COMPARED\n      order.push([j, j + 1, null, null]);\n\n      // J & J+1 WERE SWAPPED, RECORD UPDATED ARRAY\n      order.push([j, j + 1, blocksCopy.slice(), null]);\n      j -= 1;\n    }\n  }\n\n  for (i = 0; i < blocksCopy.length; i++) {\n    // RECORD i AS BEING SORTED\n    order.push([null, null, null, i]);\n  }\n\n  return order;\n};\n\nexport default insertionSort;\n","const order = [];\n\nconst merge = (blocksCopy, left, mid, right) => {\n  let i = left,\n    j = mid + 1;\n\n  const arr = [];\n\n  while (i <= mid && j <= right) {\n    // RECORD I & J AS BEING COMPARED\n    order.push([i, j, null, null]);\n\n    if (blocksCopy[i] <= blocksCopy[j]) {\n      arr.push(blocksCopy[i++]);\n    } else {\n      arr.push(blocksCopy[j++]);\n    }\n  }\n\n  while (i <= mid) {\n    // RECORD I & MID AS BEING COMPARED\n    order.push([i, mid, null, null]);\n    arr.push(blocksCopy[i++]);\n  }\n\n  while (j <= right) {\n    // RECORD J & RIGHT AS BEING COMPARED\n    order.push([j, right, null, null]);\n\n    arr.push(blocksCopy[j++]);\n  }\n\n  for (i = left; i <= right; i++) {\n    blocksCopy[i] = arr[i - left];\n\n    // I & I-LEFT WERE SWAPPED, RECORD UPDATED ARRAY\n    order.push([i, i - left, blocksCopy.slice(), null]);\n  }\n};\n\nconst helper = (blocksCopy, left, right) => {\n  if (left >= right) return;\n\n  const mid = Math.floor((left + right) / 2);\n\n  helper(blocksCopy, left, mid);\n  helper(blocksCopy, mid + 1, right);\n\n  merge(blocksCopy, left, mid, right);\n};\n\nconst mergeSort = blocks => {\n  const blocksCopy = blocks.slice();\n\n  helper(blocksCopy, 0, blocksCopy.length - 1);\n\n  for (let i = 0; i < blocksCopy.length; i++) {\n    // RECORD I AS BEING SORTED\n    order.push([null, null, null, i]);\n  }\n\n  return order;\n};\n\nexport default mergeSort;\n","const order = [];\n\nconst partition = (blocksCopy, left, right) => {\n  const pivot = left;\n  let j = left;\n\n  for (let i = left + 1; i <= right; i++) {\n    // RECORD I & PIVOT AS BEING COMPARED\n    order.push([i, pivot, null, null]);\n    if (blocksCopy[i] < blocksCopy[pivot]) {\n      j += 1;\n\n      [blocksCopy[i], blocksCopy[j]] = [blocksCopy[j], blocksCopy[i]];\n\n      // I & J WERE SWAPPED, RECORD UPDATED ARRAY\n      order.push([i, j, blocksCopy.slice(), null]);\n    }\n  }\n\n  [blocksCopy[pivot], blocksCopy[j]] = [blocksCopy[j], blocksCopy[pivot]];\n\n  // PIVOT & J WERE SWAPPED, RECORD UPDATED ARRAY\n  order.push([pivot, j, blocksCopy.slice(), null]);\n\n  // RECORD J AS BEING SORTED\n  order.push([null, null, null, j]);\n  return j;\n};\n\nconst helper = (blocksCopy, left, right) => {\n  if (left >= right) {\n    // RECORD LEFT AS BEING SORTED\n    if (left === right) order.push([null, null, null, left]);\n    return;\n  }\n\n  const mid = partition(blocksCopy, left, right);\n\n  helper(blocksCopy, left, mid - 1);\n  helper(blocksCopy, mid + 1, right);\n\n  return;\n};\n\nconst quickSort = blocks => {\n  const blocksCopy = blocks.slice();\n  helper(blocksCopy, 0, blocksCopy.length - 1);\n  return order;\n};\n\nexport default quickSort;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Bars from './components/Bars/Bars';\nimport Footer from './components/Footer/Footer';\n\nimport bubbleSort from './algorithms/BubbleSort';\nimport selectionSort from './algorithms/SelectionSort';\nimport insertionSort from './algorithms/InsertionSort';\nimport mergeSort from './algorithms/MergeSort';\nimport quickSort from './algorithms/QuickSort';\n\nconst getRandomArray = arraySize => {\n  // ARRAY FROM 1 TO ARRAY SIZE\n  const randomArray = Array.from(Array(arraySize)).map((e, i) => i + 1);\n  // SHUFFLE\n  for (let i = randomArray.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [randomArray[i], randomArray[j]] = [randomArray[j], randomArray[i]];\n  }\n  return randomArray;\n};\n\nconst App = () => {\n  const [algorithm, setAlgorithm] = useState('bubbleSort');\n  const [arraySize, setArraySize] = useState(20);\n  const [blocks, setBlocks] = useState([]);\n  const [isSorting, setIsSorting] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(true);\n  const [speed, setSpeed] = useState(500);\n  const [compare, setCompare] = useState([]);\n  const [swap, setSwap] = useState([]);\n  const [sortedIndex, setSortedIndex] = useState([]);\n\n  useEffect(() => {\n    setIsCompleted(false);\n    setIsSorting(false);\n    setSortedIndex([]);\n    setBlocks(getRandomArray(arraySize));\n  }, [arraySize]);\n\n  const handleRandomize = () => {\n    setIsCompleted(false);\n    setIsSorting(false);\n    setSortedIndex([]);\n    setBlocks(getRandomArray(arraySize));\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'speed') return setSpeed((15 - e.target.value) * 100 + 100);\n    if (e.target.name === 'arraySize') return setArraySize(Number(e.target.value));\n    if (e.target.name === 'algorithm') return setAlgorithm(e.target.value);\n  };\n\n  const handleSort = () => {\n    const showSteps = order => {\n      (function loop(i) {\n        setTimeout(() => {\n          const [j, k, arr, index] = order[i];\n          setCompare([j, k]);\n          setSwap([]);\n\n          if (index !== null) {\n            setSortedIndex(previousState => [...previousState, index]);\n          }\n\n          if (arr) {\n            setBlocks(arr);\n            if (j !== null || k != null) setSwap([j, k]);\n          }\n\n          if (++i < order.length) {\n            loop(i);\n          } else {\n            setIsSorting(false);\n            setIsCompleted(true);\n          }\n        }, speed);\n      })(0);\n    };\n\n    setIsSorting(true);\n    if (algorithm === 'bubbleSort') return showSteps(bubbleSort(blocks));\n    if (algorithm === 'selectionSort') return showSteps(selectionSort(blocks));\n    if (algorithm === 'insertionSort') return showSteps(insertionSort(blocks));\n    if (algorithm === 'mergeSort') return showSteps(mergeSort(blocks));\n    if (algorithm === 'quickSort') return showSteps(quickSort(blocks));\n    setIsSorting(false);\n    setIsCompleted(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar\n        getRandomArray={handleRandomize}\n        handleChange={handleChange}\n        handleSort={handleSort}\n        isSorting={isSorting}\n        isCompleted={isCompleted}\n        arraySize={arraySize}\n        speed={speed}\n        algorithm={algorithm}\n      />\n      <Bars blocks={blocks} compare={isSorting && compare} swap={isSorting && swap} sorted={sortedIndex} />\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"link\":\"Navbar_link__TNvz9\",\"items\":\"Navbar_items__2UnO7\",\"inputGroup\":\"Navbar_inputGroup__3fjTx\",\"group\":\"Navbar_group__3WaAQ\",\"algorithm\":\"Navbar_algorithm__3e4oK\",\"buttonGroup\":\"Navbar_buttonGroup__1hjIx\",\"bubble\":\"Navbar_bubble__2JNhL\",\"disabled\":\"Navbar_disabled__8biE9\",\"custom\":\"Navbar_custom__geZdW\",\"select\":\"Navbar_select__2TuvO\",\"focus\":\"Navbar_focus__SRhAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"link\":\"Footer_link__Xabb2\",\"inner\":\"Footer_inner__28Rmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bars\":\"Bars_bars__yWHLq\",\"block\":\"Bars_block__3NLzq\"};"],"sourceRoot":""}